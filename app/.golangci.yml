version: "2"

formatters:
  enable:
    - goimports
    - golines
  settings:
    goimports:
      local-prefixes:
        - github.com/my/project
    golines:
      max-len: 120
  exclusions:
    warn-unused: true
    generated: strict
    paths:
      - ".*\\.my\\.go$"

linters:
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - copyloopvar
    - cyclop
    - dupl
    - durationcheck
    - errcheck
    - errname
    - errorlint
    - exhaustive
    - exptostd
    - fatcontext
    - forbidigo
    - funcorder
    - funlen
    - gocheckcompilerdirectives
    - gochecknoinits
    - gochecksumtype
    - gocognit
    - gocritic
    - gocyclo
    - godot
    - goprintffuncname
    - gosec
    - govet
    - iface
    - ineffassign
    - intrange
    - loggercheck
    - makezero
    - mirror
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnesserr
    - nilnil
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - perfsprint
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - recvcheck
    # If needs a documentation
    # - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - staticcheck
    - testableexamples
    - testifylint
    - testpackage
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - usetesting
    - wastedassign
    - whitespace

  exclusions:
    rules:
      - path: '(.+)_test\.go'
        linters:
          - asasalint
          - funlen
      - path: .*\.go
        linters:
          - govet
        text: "shadow: declaration of"
      - path: '.*/main\.go$'
        linters:
          - revive

  settings:
    cyclop:
      max-complexity: 30
      package-average: 10.0

    errcheck:
      check-type-assertions: true

    exhaustive:
      check:
        - switch
        - map

    exhaustruct:
      exclude:
        - ^net/http.Client$
        - ^net/http.Cookie$
        - ^net/http.Request$
        - ^net/http.Response$
        - ^net/http.Server$
        - ^net/http.Transport$
        - ^net/url.URL$
        - ^os/exec.Cmd$
        - ^reflect.StructField$
        - ^github.com/Shopify/sarama.Config$
        - ^github.com/Shopify/sarama.ProducerMessage$
        - ^github.com/mitchellh/mapstructure.DecoderConfig$
        - ^github.com/prometheus/client_golang/.+Opts$
        - ^github.com/spf13/cobra.Command$
        - ^github.com/spf13/cobra.CompletionOptions$
        - ^github.com/stretchr/testify/mock.Mock$
        - ^github.com/testcontainers/testcontainers-go.+Request$
        - ^github.com/testcontainers/testcontainers-go.FromDockerfile$
        - ^golang.org/x/tools/go/analysis.Analyzer$
        - ^google.golang.org/protobuf/.+Options$
        - ^gopkg.in/yaml.v3.Node$

    funcorder:
      struct-method: false

    funlen:
      lines: 100
      statements: 50

    gochecksumtype:
      default-signifies-exhaustive: false

    gocognit:
      min-complexity: 20

    gocritic:
      settings:
        captLocal:
          paramsOnly: false
        underef:
          skipRecvDeref: false

    govet:
      enable-all: true
      settings:
        shadow:
          strict: false

    inamedparam:
      skip-single-param: true

    mnd:
      ignored-functions:
        - args.Error
        - flag.Arg
        - flag.Duration.*
        - flag.Float.*
        - flag.Int.*
        - flag.Uint.*
        - os.Chmod
        - os.Mkdir.*
        - os.OpenFile
        - os.WriteFile
        - prometheus.ExponentialBuckets.*
        - prometheus.LinearBuckets

    nakedret:
      max-func-lines: 0

    nolintlint:
      allow-no-explanation:
        - funlen
        - gocognit
        - golines
      require-explanation: true
      require-specific: true

    perfsprint:
      strconcat: false

    reassign:
      patterns:
        - ".*"

    rowserrcheck:
      packages:
        - github.com/jmoiron/sqlx

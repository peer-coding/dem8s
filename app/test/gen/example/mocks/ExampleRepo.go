// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/charmingruby/pack/internal/example/model"
	mock "github.com/stretchr/testify/mock"
)

// ExampleRepo is an autogenerated mock type for the ExampleRepo type
type ExampleRepo struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, example
func (_m *ExampleRepo) Create(ctx context.Context, example model.Example) error {
	ret := _m.Called(ctx, example)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.Example) error); ok {
		r0 = rf(ctx, example)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindByID provides a mock function with given fields: ctx, id
func (_m *ExampleRepo) FindByID(ctx context.Context, id string) (model.Example, error) {
	ret := _m.Called(ctx, id)

	if len(ret) == 0 {
		panic("no return value specified for FindByID")
	}

	var r0 model.Example
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (model.Example, error)); ok {
		return rf(ctx, id)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) model.Example); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(model.Example)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, example
func (_m *ExampleRepo) Save(ctx context.Context, example model.Example) error {
	ret := _m.Called(ctx, example)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.Example) error); ok {
		r0 = rf(ctx, example)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewExampleRepo creates a new instance of ExampleRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewExampleRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *ExampleRepo {
	mock := &ExampleRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
